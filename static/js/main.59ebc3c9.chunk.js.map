{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","console","log","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","a","b","reverse","getReorderedGoods","isChanged","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EA3DD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAkBzB,OAfAE,QAAQC,IAAIP,EAAUE,GAEtBG,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQV,GACN,KAAKL,EAASgB,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAILd,GACN,KAAKL,EAASgB,QACZN,EAAaG,MAAK,SAACO,EAAGC,GAAJ,OAAUD,EAAEH,cAAcI,MAC5C,MAEF,KAAKrB,EAASkB,OACZR,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMK,OAASJ,EAAMI,UAO7D,OAAOZ,EAAaG,EAAaY,UAAYZ,EAwB/Ba,CACZtB,EACA,CAAEI,WAAUE,eAGRiB,EAAYjB,GAAcF,IAAaL,EAASI,KAEtD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaL,EAASgB,UAEtCY,QAjCe,WACrBtB,EAAYN,EAASgB,UA0BjB,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaL,EAASkB,SAEtCU,QAxCa,WACnBtB,EAAYN,EAASkB,SAiCjB,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QA1CQ,WACdpB,GAAc,SAAAqB,GAAO,OAAKA,MAmCtB,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAxDI,WACZtB,EAAYN,EAASI,MACrBI,GAAc,IAmDR,sBAUJ,6BACE,6BACGC,EAAMqB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC9IpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.59ebc3c9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const reverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const isChanged = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isChanged && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}